name: Publish Python Module to PyPI

on:
  workflow_dispatch:
    inputs:
      patch_version:
        description: "Patch version"
        default: true
        required: true
        type: boolean
      use_custom_version:
        description: "Use custom_version instead of increment"
        default: false
        required: true
        type: boolean
      custom_version:
        description: "Specific version to release:"
        default: 0.0.1
        type: string
        required: true

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.PATCH_VERSION_DEPLOY_KEY_SECRET }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user pipx
          pipx install poetry

      - name: Build & Test
        run: |
          poetry install
          poetry run pytest -m "not integration"

      - name: Patch minor version
        if: ${{ inputs.patch_version && !inputs.use_custom_version }}
        run: poetry version patch

      - name: Set specific version
        if: ${{ inputs.patch_version && inputs.use_custom_version }}
        run: poetry version ${{ inputs.custom_version }}

      - name: Publish package
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry publish --build --no-interaction

      - name: Push updated version
        if: ${{ inputs.patch_version }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -a -m "Update version"
          git push
